name: 'IssueOps - Patch Release Branch'
run-name: 'Patch Release Branch -${{ github.event.issue.number }}-requested by-${{ github.event.issue.user.login }}'
on:
  issues:
    types: [ opened ]

#Set the environment variables for tracking metrics
env:
  SFPOWERSCRIPTS_DATADOG: 'true'
  SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'


jobs:
  issue-analyzer:
    if: contains(github.event.issue.title, 'Dev - Request a release branch to be created from a release definition')
    runs-on: ubuntu-latest
    outputs:
      releasedefn: ${{ steps.issue-analyzer-output.outputs.releasedefn }}
      domain: ${{ steps.issue-analyzer-output.outputs.domain }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/request-a-release-branch.yml

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GHA_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["dev","dev-release-branch-request"]
            })

      - name: Create Comment before initiation
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ secrets.GHA_TOKEN }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Your request has been received and is being processed. 
            We will attempt to patch the release branch with the requested release definition ${{ steps.issue-parser.outputs.issueparser_releasedefn }}
            You can follow the action at this link: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

      - name: Set Output
        id: issue-analyzer-output
        run: |
            echo "releasedefn=${{ steps.issue-parser.outputs.issueparser_releasedefn }}" >> "$GITHUB_OUTPUT"
            echo "domain=${{ steps.issue-parser.outputs.issueparser_domain }}" >> "$GITHUB_OUTPUT"
          
           


  execute_action:
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfops:latest
    concurrency: patch
    needs: issue-analyzer
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Authenticate to npm
      - uses: actions/setup-node@v3
        with:
         registry-url: 'https://npm.pkg.github.com'


      # Release to environment
      - name: 'Patch Release Branch'
        run: |
            # Get the latest release defn from releasedefns branch
            pathToReleaseDef="${{ needs.issue-analyzer.outputs.releasedefn }}"
            extension="${pathToReleaseDef##*.}"
             if [[ "$extension" == "yaml" || "$extension" == "yml" ]]; then
                pathWithoutExtension="${pathToReleaseDef%.*}"
            fi

            git config --global --add safe.directory /__w/sf-core/sf-core

            git branch --delete --remotes origin/release/${{ needs.issue-analyzer.outputs.domain }} --force || true
            git fetch origin --prune


            git show origin/releasedefns:${{ needs.issue-analyzer.outputs.domain }}/$pathToReleaseDef.yml > $pathToReleaseDef.yml
            sfpowerscripts repo:patch -p  $pathToReleaseDef.yml -s main  -t release/${{ needs.issue-analyzer.outputs.domain }} --npm --scope ${{ github.repository_owner }} 
        env:
         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}         
      
  close_issue:
     runs-on: ubuntu-latest
     needs:   execute_action
     steps:

      # gh needs a repo bummer
      - uses: actions/checkout@v3

      - name: Close Issue
        run: |
         gh issue close ${{github.event.issue.number}} -c " Hello @${{ github.event.issue.user.login }} :wave: \n Your request has been sucessfully processed" -r "Completed"
        env:
           GH_TOKEN: ${{ secrets.GHA_TOKEN }}

  comment_issue_on_error:
      runs-on: ubuntu-latest
      needs:   execute_action
      if: always() && needs.execute_action.result == 'failure'
      steps:

      - name: Create Comment after failure
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ secrets.GHA_TOKEN }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Apologies, it seems we ran into an issue, This would need your manual attention please check the job run
            at the link https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}



