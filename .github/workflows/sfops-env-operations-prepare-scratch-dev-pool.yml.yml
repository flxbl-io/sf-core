# DX@Scale CI/CD Template for GitHub
#----------------------------------------------------------------------------------------------------
# Follows reference pipeline available at docs.dxatscale.io
# 
#-----------------------------------------------------------------------------------------------------
# To know more about dxatscale, visit https://docs.dxatscale.io
# To know more on sfpowerscripts, visit- https://docs.dxatscale.io/sfpowerscripts


# This pipeline creates the DEV pools

name: 'Job - Replenish DEV Pools'

on:
  workflow_dispatch:
   inputs:
      gitRef:
        description: "Commit Id from where the pools should be created"
        required: false
        default: 'main'
  schedule:
    - cron: '0 14 * * *'


#Set the environment variables for tracking metrics
env:
  SFPOWERSCRIPTS_DATADOG: 'true'
  SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'



jobs:

  pool:
    name: 'Replenish Dev Pool'
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts
    timeout-minutes: 720 #Set to Maximum Time out
    steps:

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.gitRef }}
          fetch-depth: 0


      - name: 'Authenticate Dev Hub'
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url  -f authfile -a devhub

      # Authenticate to npm
      - uses: actions/setup-node@v3
        with:
         registry-url: 'https://npm.pkg.github.com'

      - name: 'Prepare a pool of scratch orgs'
        run: 'sfp orchestrator:prepare -f config/scratch-dev-pool.json -v devhub'
        env:
         NODE_AUTH_TOKEN: ${{ secrets.GHA_TOKEN }}
        
              # Publish artifacts
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: scratch-dev-pool
          path: .sfpowerscripts/prepare_logs
