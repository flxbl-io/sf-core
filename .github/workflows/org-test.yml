name: 'Jobs - Report results of all tests'

# Read name of sandbox
on:
  workflow_dispatch:
  schedule:
      - cron: '0 12 * * *' # At 12 00 UTC every day

#Set the environment variables for tracking metrics
env:
  SFPOWERSCRIPTS_DATADOG: 'true'
  SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'

jobs:
  testInQA:
    name: 'Test in QA'
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts-rc:alpha
    environment:
      name: qa
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Authenticate to qa sandbox   
        run: |
          echo "${{ secrets.SB_SFDX_AUTH_URL }}" > ./sb_authfile
          sfdx auth:sfdxurl:store -f ./sb_authfile -a qa
      
      - name: 'Run all local apex tests and report results'
        uses: flxbl-io/sfops-gh-actions/apextestresultReporter@main
        with:
         alias: qa
         target-repo: flxbl-io/sfops-dashboard
         gh_token: ${{ secrets.GHA_TOKEN }}
  
  testInUAT:
    name: 'Test in UAT'
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts-rc:alpha
    environment:
      name: uat
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Authenticate to qa sandbox   
        run: |
          echo "${{ secrets.SB_SFDX_AUTH_URL }}" > ./sb_authfile
          sfdx auth:sfdxurl:store -f ./sb_authfile -a uat
      
      - name: 'Run all local apex tests and report results'
        uses: flxbl-io/sfops-gh-actions/apextestresultReporter@main
        with:
         alias: uat
         target-repo: flxbl-io/sfops-dashboard
         gh_token: ${{ secrets.GHA_TOKEN }}

  testInProd:
      name: 'Test in Prod'
      runs-on: ubuntu-latest
      container: ghcr.io/dxatscale/sfpowerscripts-rc:alpha
      environment:
        name: prod
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: 'Authenticate Prod'
          run: |
              echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
              sfdx auth:sfdxurl:store -f authfile -a prod
        
        - name: 'Run all local apex tests and report results'
          uses: flxbl-io/sfops-gh-actions/apextestresultReporter@main
          with:
            alias: prod
            target-repo: flxbl-io/sfops-dashboard
            gh_token: ${{ secrets.GHA_TOKEN }}        
         
  static:
    name: 'static-analysis-of-Apex-classes-using-PMD'
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts-rc:alpha
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'


      - name: 'Initialize and Setup' 
        run: |
            sfdx plugins:install @salesforce/sfdx-scanner

      - name: 'Run sfdx-scanner'  
        run: |
            mkdir pmd
            sfdx scanner:run --target "src"  --pmdconfig "pmd-rulesets/pmd-ruleset.xml" --format "html" -o "pmd/pmdReport.html" 
            sfdx scanner:run --target "src"  --pmdconfig "pmd-rulesets/pmd-ruleset.xml" --format "csv" -o "pmd/pmdReport-csv.csv" 
            
      - name: 'Upload pmd results to sfops-dashboard'
        uses: flxbl-io/sfops-gh-actions/gitRepoCommitter@main
        with:
         source-dir: pmd
         commit-message: 'updated with pmd results'
         target-dir: pmd
         target-repo: flxbl-io/sfops-dashboard
         gh_token: ${{ secrets.GHA_TOKEN }}

