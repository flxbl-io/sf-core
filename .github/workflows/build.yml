# build all packages


name: 'Build-Test-Publish'


on:
  push:
    branches:
      - main
      - 'release/**'

  workflow_dispatch:



#Set the environment variables for tracking metrics
env:
  SFPOWERSCRIPTS_DATADOG: 'true'
  SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'


jobs:
  analyze:
    name: 'Analyze Impacted Domains'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Figure out the last tagged commit id
        id: commit-finder
        run: |
            last_tag=$(git describe --tags --match '*_v*' --abbrev=0 2>/dev/null || true)

            if [ -z "$last_tag" ]; then
              echo "No tags found."
              echo "last_tagged_commit=$(git rev-list --max-parents=0 HEAD)" >> $GITHUB_OUTPUT
            else
              echo "Tag found: $last_tag"
              echo "last_tagged_commit=$(git rev-parse $last_tag)" >> $GITHUB_OUTPUT
            fi
        

      - name: 'Figure Impacted Release Defns'
        uses: flxbl-io/sfops-gh-actions/impactedReleaseDefnDetector@main
        with:
         pathToReleaseDefns: 'config'
         from-commit: ${{ steps.commit-finder.outputs.last_tagged_commit }}
         to-commit: HEAD
         
      - name: Set matrix data
        id: set-matrix
        run: |
           echo "matrix=$(jq -c . < ./impacted-releases.json)" >> $GITHUB_OUTPUT
  

  build-deploy-publish:
    name: 'Build, Deploy & Publish ${{ matrix.releaseName }}'
    needs: 
      - analyze
    if: ${{ needs.analyze.outputs.matrix != '[]' && needs.analyze.outputs.matrix != '' }}
    strategy:
      matrix: ${{ fromJson(needs.analyze.outputs.matrix) }}
      fail-fast: false
      max-parallel: 1
    uses:   flxbl-io/sfops-gh-actions/.github/workflows/build-a-domain.yml@main
    with:
       releaseconfig: ${{ matrix.filePath }}
       domain: ${{ matrix.releaseName }}
       branchname: ${{ github.ref_name }}
       pathToReleaseConfigs: 'config'
       dashboard-repo: sfops-dashboard
       releasename: ${{ vars.releaseName }}
       metrics-provider: 'datadog'
       workitem-url: 'https://github.com/${{github.repository}}/issues/'
       workitem-filter: '(ISSUE)-[0-9]{3,4}'
    secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      datadog-api-key: ${{ secrets.DATADOG_API_KEY }}
      datadog-host: ${{ secrets.DATADOG_HOST }}
      sfopsbot-app-id: ${{ vars.SFOPBSBOT_APP_ID }}
      sfopsbot-private-key: ${{ vars.SFOPSBOT_APP_PRIVATE_KEY }}

  
