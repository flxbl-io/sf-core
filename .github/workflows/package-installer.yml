# Installs an unlocked or managed package across the org
# Github doesnt support matrix secrets, so when a new environment is added, please add a job for it


name: 'IssueOps - Unlocked/Managed Package Installer across all environments'
run-name: 'Install Package-${{ github.event.issue.number }}-requested by-${{ github.event.issue.user.login }}'
on:
  issues:
    types: [ opened ]

#Set the environment variables for tracking metrics
env:
  SFPOWERSCRIPTS_DATADOG: 'true'
  SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'


jobs:
  issue-analyzer:
    if: contains(github.event.issue.title, 'Ops - Install a new managed/unlocked package')
    runs-on: ubuntu-latest
    outputs:
      parsedEnvs: ${{ steps.issue-analyzer-output.outputs.parsedEnvs }}
      packageId: ${{ steps.issue-analyzer-output.outputs.packageId }}
      installationKey: ${{ steps.issue-analyzer-output.outputs.installationKey }} 
      forceInstall: ${{ steps.issue-analyzer-output.outputs.forceInstall }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/request-package-installation.yml   

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GHA_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ "ops", "ops-package-installation-request"]
            })


      - name: Create Comment before initiating action
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ secrets.GHA_TOKEN }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Thanks for requesting installation of a package to environment(s) ${{ steps.issue-parser.outputs.issueparser_envs }} 
            We will start the process of installing the package to the environment.
            You will be notified when the package installation is complete.
            Please check the logs at https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

      - name: Set Output
        id: issue-analyzer-output
        run: |
           IFS=',' read -r -a array <<< "${{ steps.issue-parser.outputs.issueparser_envs }}"
           output="["
           for element in "${array[@]}"
           do
            output+="\"$element\","
           done
           output="${output::-1}"
           output+="]"
           echo "parsedEnvs=$output" >> "$GITHUB_OUTPUT"
           echo "packageId=${{  steps.issue-parser.outputs.issueparser_packageId }}" >> "$GITHUB_OUTPUT"
           echo "installationKey=${{  steps.issue-parser.outputs.issueparser_key }}" >> "$GITHUB_OUTPUT"

           if [ "${{  steps.issue-parser.outputs.issueparser_forceInstall }}" == "yes" ]; then
            echo "forceInstall=true" >> "$GITHUB_OUTPUT"
           else
            echo "forceInstall=false" >> "$GITHUB_OUTPUT"
           fi
          
  execute_action:
    needs: issue-analyzer
    uses:  flxbl-io/sfops-gh-actions/.github/workflows/unlocked-package-installer-job.yml@main
    strategy:
      fail-fast: false
      matrix:
        environment: ${{  fromJson(needs.issue-analyzer.outputs.parsedEnvs) }}
    with:
        environment:  ${{ matrix.environment }}
        package:  ${{ needs.issue-analyzer.outputs.packageId }}
        installation-key: ${{ needs.issue-analyzer.outputs.installationKey }}
        target-repo: 'flxbl-io/sfops-dashboard'
        forceInstall: ${{ needs.issue-analyzer.outputs.forceInstall }}
        reportPackageVersion: true
    secrets:
        SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
        DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
        gh-token: ${{ secrets.GHA_TOKEN }}

      
  close_issue:
     runs-on: ubuntu-latest
     needs: execute_action
     steps:

      # gh needs a repo bummer
      - uses: actions/checkout@v3

      - name: Close Issue
        run: |
         gh issue close ${{github.event.issue.number}} -c " Hello @${{ github.event.issue.user.login }} :wave: \n Your request has been sucessfully processed" -r "Completed"
        env:
           GH_TOKEN: ${{ secrets.GHA_TOKEN }}
  
  comment_issue_on_error:
      runs-on: ubuntu-latest
      needs:   execute_action
      if: always() && needs.execute_action.result == 'failure'
      steps:

      - name: Create Comment after failure
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ secrets.GHA_TOKEN }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Apologies, it seems we ran into an issue, This would need your manual attention please check the job run
            at the link https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}