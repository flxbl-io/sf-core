name: "sfops - On Pull Request Comments"

on:
  issue_comment:
    types: [created]

jobs:
  analyze:
    name: "Analyze Impacted Domains"
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfops-lite:latest
    if: ${{ github.event.issue.pull_request && ( startsWith(github.event.comment.body, 'sfops test') || (startsWith(github.event.comment.body, 'sfops unlock'))) }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      base-ref: ${{ steps.comment-branch.outputs.base_ref}}
      head-sha: ${{ steps.comment-branch.outputs.head_sha }}

    steps:
      - name: Add a reaction
        uses: GrantBirki/comment@e6bf4bc177996c9572b4ddb98b25eb1a80f9abc9 # pin@v2.0.7
        with:
          comment-id: ${{ github.event.comment.id}}
          reactions: eyes

      - uses: xt0rted/pull-request-comment-branch@v2
        name: Figure out the commit refs
        id: comment-branch

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.comment-branch.outputs.head_sha }}

      - name: "Figure Impacted Release Defns"
        uses: flxbl-io/sfops-gh-actions/impactedReleaseDefnDetector@main
        with:
          pathToReleaseDefns: "config"
          from-commit: ${{ steps.comment-branch.outputs.base_sha }}
          to-commit: ${{ steps.comment-branch.outputs.head_sha }}

      - name: Set matrix data
        id: set-matrix
        run: |
          cat impacted-release-configs.json
          echo "matrix=$(jq -c . < ./impacted-release-configs.json)" >> $GITHUB_OUTPUT

  deploy-lock:
    if: ${{ needs.analyze.outputs.matrix != '[]' &&  github.event.issue.pull_request &&  startsWith(github.event.comment.body, 'sfops test') }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.analyze.outputs.matrix) }}
      fail-fast: false
    needs:
      - analyze
    outputs:
      continue: ${{ steps.branch-deploy.outputs.continue }}
      issue-number: ${{ github.event.issue.number }}
      branch-ref: ${{ steps.branch-deploy.outputs.ref }}
      locked: ${{ steps.lock.outcome }}
      base-ref: ${{ steps.branch-deploy.outputs.base_ref }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
          app-id: ${{ vars.SFOPSBOT_APP_ID }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.analyze.outputs.head-sha  }}

      - uses: flxbl-io/sfops-gh-actions/lock@main
        id: unlock
        name: Test whether a lock exists
        continue-on-error: true
        with:
          mode: "unlock-on-comment"
          environment: "test-${{ matrix.releaseName }}"
          environment_targets: "test-${{ matrix.releaseName }}"
          github_token: ${{steps.app-token.outputs.token}}

      - uses: mshick/add-pr-comment@v2
        name: If a lock already exists
        if: ${{ steps.unlock.outputs.issue-match == 'false' }}
        with:
          allow-repeats: false
          message-id: issue-${{ github.event.issue.number }}
          refresh-message-position: true
          repo-token: ${{ steps.app-token.outputs.token }}
          message: |
            ### Deployment In Progress ðŸš€

            Hello @${{ github.event.issue.user.login }} :wave:

            There is another deployment in progress, so the issue is locked by __${{steps.unlock.outputs.issue-number}}__
              
            Please proceed to https://github.com/${{github.repository}}/pull/${{steps.unlock.outputs.issue-number}}  cancel any exising deployment runs and then proceed to unlock the issue
            by typing in ```sfops unlock.```

      - uses: flxbl-io/sfops-gh-actions/fetchAllEnvs@main
        id: fetchTestEnvs
        with:
          gh_token: ${{ steps.app-token.outputs.token }}
          filter: "type:test,branch:${{ needs.analyze.outputs.base-ref }}"

      - name: Check for status
        id: branch-deploy
        if: ${{ steps.unlock.outcome=='failure' || steps.unlock.outputs.unlocked == 'true' }}
        uses: flxbl-io/sfops-gh-actions/branchDeploy@main
        with:
          reaction: "eyes"
          stable_branch: "main"
          release-name: ${{ matrix.releaseName }}
          test-envs: ${{steps.fetchTestEnvs.outputs.allEnvs}}
          github_token: ${{steps.app-token.outputs.token}}
          environment: test-${{ matrix.releaseName }}
          skip_ci: test-${{ matrix.releaseName }}
          skip_reviews: test-${{ matrix.releaseName }}
          skip_completing: "true"

      - uses: flxbl-io/sfops-gh-actions/lock@main
        name: Claim Deployment Lock to Test Environments
        id: lock
        if: ${{ steps.unlock.outcome == 'failure' || steps.unlock.outputs.unlocked == 'true'}}
        with:
          mode: "lock"
          environment: "test-${{ matrix.releaseName }}"
          environment_targets: "test-${{ matrix.releaseName }}"
          github_token: ${{steps.app-token.outputs.token}}

      - uses: flxbl-io/sfops-gh-actions/branchDeploymentReporter@main
        name: Report Branch Deployments
        id: report
        with:
          status: "locked"
          branch: ${{ steps.branch-deploy.outputs.ref }}
          dashboard-repo: ${{ vars.SFOPS_DASBHOARD_REPO }}
          gh_token: ${{steps.app-token.outputs.token}}
          issue-number: ${{ steps.branch-deploy.outputs.issue_number }}

  deploy-unlock:
    if: ${{ github.event.issue.pull_request &&  startsWith(github.event.comment.body, 'sfops unlock') }}
    runs-on: ubuntu-latest
    needs:
      - analyze
    strategy:
      matrix: ${{ fromJson(needs.analyze.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
          app-id: ${{ vars.SFOPSBOT_APP_ID }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: flxbl-io/sfops-gh-actions/lock@main
        id: unlock
        with:
          mode: "unlock-on-comment"
          environment: "test-${{ matrix.releaseName }}"
          environment_targets: "test-${{ matrix.releaseName }}"
          github_token: ${{steps.app-token.outputs.token}}

      - uses: mshick/add-pr-comment@v2
        name: If the issue doesnt match
        if: ${{ steps.unlock.outputs.issue-match == 'false' }}
        with:
          allow-repeats: false
          message-id: issue-${{ github.event.issue.number }}
          refresh-message-position: true
          repo-token: ${{ steps.app-token.outputs.token }}
          message: |
            Hello @${{ github.event.issue.user.login }} :wave:

            There is another deployment in progress, so the issue is locked by __${{steps.unlock.outputs.issue-number}}__

            If you wish to __cancel__ the onoging deployment, 
            Please proceed to https://github.com/${{github.repository}}/pull/${{steps.unlock.outputs.issue-number}} , cancel the ongoing run and then type in the following
            to unlock the issue  ```sfops unlock ```.

      - uses: mshick/add-pr-comment@v2
        name: If the issue matches
        if: ${{ steps.unlock.outputs.unlocked == 'true' }}
        with:
          allow-repeats: false
          message-id: issue-${{ github.event.issue.number }}
          refresh-message-position: true
          repo-token: ${{ steps.app-token.outputs.token }}
          message: |
            Hello @${{ github.event.issue.user.login }} :wave:

            Alright, you have succesfully removed the lock on the issue  https://github.com/${{github.repository}}/pull/${{steps.unlock.outputs.issue-number}}

            Please note this is not side effect free, your earlier deployments still persist on environment, You would need to do  a manual cleanup
            on the environment to remove the feature

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.analyze.outputs.head-sha  }}

      - uses: flxbl-io/sfops-gh-actions/branchDeploymentReporter@main
        name: Report Branch Deployments
        id: report
        if: ${{ steps.unlock.outputs.unlocked == 'true'}}
        with:
          status: "unlocked"
          dashboard-repo: ${{ vars.SFOPS_DASBHOARD_REPO }}
          gh_token: ${{steps.app-token.outputs.token}}
          issue-number: ${{ github.event.issue.number }}

  build-deploy:
    name: "Deploy ${{ matrix.releaseName }} to test environments"
    needs:
      - analyze
      - deploy-lock
    if: ${{ needs.analyze.outputs.matrix != '[]'  && needs.deploy-lock.outputs.locked == 'success'}}
    strategy:
      matrix: ${{ fromJson(needs.analyze.outputs.matrix) }}
      fail-fast: false
      max-parallel: 1
    uses: flxbl-io/sfops-gh-actions/.github/workflows/build-test-domain.yml@main
    with:
      releaseconfig: ${{ matrix.filePath }}
      domain: ${{ matrix.releaseName }}
      branchname: ${{ needs.deploy-lock.outputs.branch-ref }}
      branch-ref: ${{ needs.deploy-lock.outputs.branch-ref }}
      base-branch: ${{ needs.deploy-lock.outputs.base-ref }}
      pathToReleaseConfigs: "config"
      dashboard-repo: ${{ vars.SFOPS_DASBHOARD_REPO }}
      releasename: ${{ vars.releaseName }}
      metrics-provider: ${{ vars.SFOPS_METRICS_PROVIDER }}
      workitem-url: ${{ vars.SFOPS_ISSUETRACKER_URL }}
      workitem-filter: ${{ vars.SFOPS_ISSUETRACKER_WORKITEM_FILTER }}
      sfopsbot-app-id: ${{ vars.SFOPSBOT_APP_ID }}
    secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
