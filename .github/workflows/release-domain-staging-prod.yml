name: 'IssueOps - Release a Domain To Release Envs'
run-name: 'Release a domain To Release Envs -${{ github.event.issue.number }}-requested by-${{ github.event.issue.user.login }}'
on:
  issues:
    types: [ opened , reopened]

#Set the environment variables for tracking metrics
env:
  SFPOWERSCRIPTS_DATADOG: 'true'
  SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'


jobs:
  issue-analyzer:
    if: contains(github.event.issue.title, 'Ops - Release a domain into staging/prod')
    runs-on: ubuntu-latest
    outputs:
      domain: ${{ steps.issue-parser.outputs.issueparser_domain }}
      releasedefn: ${{ steps.issue-parser.outputs.issueparser_releasedefn}}
      forceInstall: ${{ steps.issue-parser.outputs.issueparser_forceInstall }}
      overridePackageVersions:  ${{ steps.issue-parser.outputs.issueparser_overridePackageVersions }}
      excludePackages: ${{ steps.issue-parser.outputs.issueparser_excludePackages }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/request-a-release-staging-prod.yml

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GHA_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ "ops", "ops-request-releases"]
            })

      - name: Create Comment before initiating action
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ secrets.GHA_TOKEN }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Your request has been received and is being processed. 
            We will now deploy your release  ${{ steps.issue-parser.outputs.issueparser_releasedefn }}  for domain ${{ steps.issue-parser.outputs.issueparser_domain }} 
            to the following environments staging and prod

            Please note deployments to staging/production would need approvals from the respective owners of the enviroment. Rest assured, we have notified and
            they will let you approve and the release should continue
             
            You can follow the action at this link: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

            If this is a mistake, please close this issue, cancel the above action and raise a new issue with the correct details

  fetch-all-envs:
    needs: issue-analyzer
    runs-on: ubuntu-latest
    outputs:
      allEnvsAsJSON: ${{ steps.fetchAllEnvs.outputs.allEnvsAsJSON }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: flxbl-io/sfops-gh-actions/fetchAllEnvs@main
        id: fetchAllEnvs
        with:
          gh_token: ${{ secrets.GHA_TOKEN }}
          filter: "type:release"

  pre_release_check:
    needs: fetch-all-envs
    uses:  flxbl-io/sfops-gh-actions/.github/workflows/pre-release-check.yml@main
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ needs.fetch-all-envs.outputs.allEnvsAsJSON }}
    with:
        sbxname:  ${{ matrix.environment }}
        domain:  ${{ needs.issue-analyzer.outputs.domain }}
        releaseDefn:  ${{ needs.issue-analyzer.outputs.releaseDefn }}
        environment: ${{ matrix.environment }}
        branchname: releasedefns
        overrideSkipIfAlreadyInstalled: ${{ needs.issue-analyzer.outputs.forceInstall}}
        overridePackageVersions: ${{ needs.issue-analyzer.outputs.overridePackageVersions }}
        excludePackages: ${{ needs.issue-analyzer.outputs.excludePackages }}
        issue-number: ${{github.event.issue.number}}
        issue-author: ${{github.event.issue.user.login}}
        issue-notifier: 'flxbl-io/sf-core'
        metrics-provider: 'datadog'
    secrets:
        DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
        gh-token: ${{ secrets.GHA_TOKEN }}
      
  execute_action:
    needs: 
      - issue-analyzer
      - pre_release_check
      - fetch-all-envs
    uses:  flxbl-io/sfops-gh-actions/.github/workflows/release-to-an-env.yml@main
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ needs.fetch-all-envs.outputs.allEnvsAsJSON }}
    with:
        org-name:  ${{ matrix.environment }}
        domain:  ${{ needs.issue-analyzer.outputs.domain }}
        releaseDefn:  ${{ needs.issue-analyzer.outputs.releaseDefn }}
        environment: ${{ matrix.environment }}
        environment-profile: ${{ matrix.environment }}
        branchname: releasedefns
        overrideSkipIfAlreadyInstalled: ${{ needs.issue-analyzer.outputs.forceInstall}}
        source-repo-url: https://github.com/flxbl-io/sf-core
        target-repo: flxbl-io/sfops-dashboard
        workitem-url: https://flxbl.atlassian.net
        overridePackageVersions: ${{ needs.issue-analyzer.outputs.overridePackageVersions }}
        excludePackages: ${{ needs.issue-analyzer.outputs.excludePackages }}
        issue-number: ${{github.event.issue.number}}
        issue-author: ${{github.event.issue.user.login}}
        issue-notifier: 'flxbl-io/sf-core'
        metrics-provider: 'datadog'
    secrets:
        DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
        SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
        gh-token: ${{ secrets.GHA_TOKEN }}
        datadog-api-key: ${{ secrets.DATADOG_API_KEY }}
        datadog-host: ${{ secrets.DATADOG_HOST }}

 
      
  close_issue:
     runs-on: ubuntu-latest
     needs:  execute_action
     steps:

      # gh needs a repo bummer
      - uses: actions/checkout@v3

      - name: Close Issue
        run: |
         gh issue close ${{github.event.issue.number}} -c " Hello @${{ github.event.issue.user.login }} :wave: \n Your request has been sucessfully processed" -r "Completed"
        env:
           GH_TOKEN: ${{ secrets.GHA_TOKEN }}

  comment_issue_on_error:
      runs-on: ubuntu-latest
      needs:   execute_action
      if: always() && needs.execute_action.result == 'failure'
      steps:

      - name: Create Comment after failure
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ secrets.GHA_TOKEN }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Apologies, it seems we ran into an issue, This would need your manual attention please check the job run
            at the link https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}