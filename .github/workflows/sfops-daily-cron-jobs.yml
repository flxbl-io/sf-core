name: sfops - daily job executer
on:
  schedule:
    - cron: '0 12 * * *' # At 12 00 UTC every day
  workflow_dispatch:


jobs:
  expire-dev-envs:
    name: 'Expire Developer Environments'
    uses:   flxbl-io/sfops-gh-actions/.github/workflows/expire-dev-envs.yml@main
    with:
      sfopsbot-app-id: ${{ vars.SFOPSBOT_APP_ID }}
    secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}    

  gh-reporter:
    name: 'Report github metrics'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfops:latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
           app-id: ${{ vars.SFOPSBOT_APP_ID }}
           private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}

      - name: 'Initialize and Setup' 
        run: |
              npm install
              # Setup safe directory as github actions checkout errors out in containers with root user
              git config --global --add safe.directorGHA_TOKENy /__w/sf-core/sf-core

              # Install ubuntu
              type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
              curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
              && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
              && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
              && sudo apt update \
              && sudo apt install gh -y


      - name: 'Run github metric reporter'  
        run: |
          node scripts/build-scripts/github-pr-status-reporter.js $(date "+%Y-%m-%d")
        env:
          GH_TOKEN: $${{ steps.app-token.outputs.token }}
