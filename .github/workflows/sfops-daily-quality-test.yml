name: 'Jobs - Report results of all quality tests'

# Read name of sandbox
on:
  workflow_dispatch:
  schedule:
      - cron: '0 12 * * *' # At 12 00 UTC every day

#Set the environment variables for tracking metrics
env:
  SFPOWERSCRIPTS_DATADOG: 'true'
  SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'

run-name: 'sfops- Execute Daily Quality Tests'

jobs:

  fetch-all-envs:
    runs-on: ubuntu-latest
    outputs:
      allEnvsAsJSON: ${{ steps.fetchAllEnvs.outputs.allEnvsAsJSON }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
           app-id: ${{ vars.SFOPSBOT_APP_ID }}
           private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}


      - uses: flxbl-io/sfops-gh-actions/fetchAllEnvs@main
        id: fetchAllEnvs
        with:
          gh_token: ${{ steps.app-token.outputs.token }}
          filter: "testrun:true"
  

  test:
    name: 'Test in  ${{matrix.environment}}'
    runs-on: ubuntu-latest
    needs: fetch-all-envs
    container: ghcr.io/flxbl-io/sfops:latest
    strategy:
      fail-fast: false
      matrix:
        environment: ${{  fromJSON(needs.fetch-all-envs.outputs.allEnvsAsJSON) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
           app-id: ${{ vars.SFOPSBOT_APP_ID }}
           private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}

      - name: Authenticate to ${{matrix.environment}}
        id: handle-auth
        uses: flxbl-io/sfops-gh-actions/authToEnvironment@main
        with: 
          DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
          org-name: ${{matrix.environment}}
          environment-profile: ${{matrix.environment}}
      
      - name: 'Run all local apex tests and report results'
        uses: flxbl-io/sfops-gh-actions/apextestresultReporter@main
        with:
         alias: ${{matrix.environment}}
         target-repo: flxbl-io/sfops-dashboard
         gh_token: ${{ steps.app-token.outputs.token }}
  
 
  static:
    name: 'static-analysis-of-Apex-classes-using-PMD'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfops:latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
           app-id: ${{ vars.SFOPSBOT_APP_ID }}
           private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}


      - name: 'Initialize and Setup' 
        run: |
            sfdx plugins:install @salesforce/sfdx-scanner

      - name: 'Run sfdx-scanner'  
        run: |
            mkdir pmd
            sfdx scanner:run --target "src"  --pmdconfig "pmd-rulesets/pmd-ruleset.xml" --format "html" -o "pmd/pmdReport.html" 
            sfdx scanner:run --target "src"  --pmdconfig "pmd-rulesets/pmd-ruleset.xml" --format "csv" -o "pmd/pmdReport-csv.csv" 
            
      - name: 'Upload pmd results to sfops-dashboard'
        uses: flxbl-io/sfops-gh-actions/gitRepoCommitter@main
        with:
         source-dir: pmd
         commit-message: 'updated with pmd results'
         target-dir: pmd
         target-repo: flxbl-io/sfops-dashboard
         sfopsbot-app-id: ${{ vars.SFOPSBOT_APP_ID }}
         sfopsbot-private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}

